// <auto-generated />
using System;
using FridayNight.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FridayNight.DAL.Migrations
{
    [DbContext(typeof(FNContext))]
    [Migration("20200912143909_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FridayNight.DAL.Model.Abstract.AccountBase", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnName("discriminator")
                        .HasColumnType("text");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnName("is_confirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnName("login")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnName("registration_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Uid")
                        .HasName("pk_account_base");

                    b.ToTable("accounts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AccountBase");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Abstract.ActionRecordBase", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTime")
                        .HasColumnName("date_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnName("discriminator")
                        .HasColumnType("text");

                    b.HasKey("Uid")
                        .HasName("pk_action_record_base");

                    b.ToTable("action_records");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ActionRecordBase");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Abstract.LinkContainerBase", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnName("discriminator")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("text");

                    b.HasKey("Uid")
                        .HasName("pk_link_container_base");

                    b.ToTable("link_containers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("LinkContainerBase");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Abstract.RatingBase", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnName("discriminator")
                        .HasColumnType("text");

                    b.HasKey("Uid")
                        .HasName("pk_rating_base");

                    b.ToTable("ratings");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RatingBase");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Abstract.ResourceBase", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnName("discriminator")
                        .HasColumnType("text");

                    b.Property<byte[]>("Resource")
                        .HasColumnName("resource")
                        .HasColumnType("bytea");

                    b.HasKey("Uid")
                        .HasName("pk_resource_base");

                    b.ToTable("resources");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ResourceBase");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.LivePerformance", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnName("duration")
                        .HasColumnType("interval");

                    b.Property<Guid?>("InAppLinkUid")
                        .HasColumnName("in_app_link_uid")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsPrivate")
                        .HasColumnName("is_private")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LocationUid")
                        .HasColumnName("location_uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MusicTalentUid")
                        .HasColumnName("music_talent_uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int>("PerformanceType")
                        .HasColumnName("performance_type")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PhotoUid")
                        .HasColumnName("photo_uid")
                        .HasColumnType("uuid");

                    b.Property<int>("State")
                        .HasColumnName("state")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TalentSeekerUid")
                        .HasColumnName("talent_seeker_uid")
                        .HasColumnType("uuid");

                    b.HasKey("Uid")
                        .HasName("pk_live_performances");

                    b.HasIndex("InAppLinkUid")
                        .HasName("ix_live_performances_in_app_link_uid");

                    b.HasIndex("LocationUid")
                        .HasName("ix_live_performances_location_uid");

                    b.HasIndex("MusicTalentUid")
                        .HasName("ix_live_performances_music_talent_uid");

                    b.HasIndex("PhotoUid")
                        .HasName("ix_live_performances_photo_uid");

                    b.HasIndex("TalentSeekerUid")
                        .HasName("ix_live_performances_talent_seeker_uid");

                    b.ToTable("live_performances");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Location", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GoogleCoordinates")
                        .HasColumnName("google_coordinates")
                        .HasColumnType("text");

                    b.Property<Guid?>("TalentSeekerUid")
                        .HasColumnName("talent_seeker_uid")
                        .HasColumnType("uuid");

                    b.HasKey("Uid")
                        .HasName("pk_locations");

                    b.HasIndex("TalentSeekerUid")
                        .HasName("ix_locations_talent_seeker_uid");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicInstrument", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MusicTalentUid")
                        .HasColumnName("music_talent_uid")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnName("type")
                        .HasColumnType("integer");

                    b.HasKey("Uid")
                        .HasName("pk_music_instrument");

                    b.HasIndex("MusicTalentUid")
                        .HasName("ix_music_instrument_music_talent_uid");

                    b.ToTable("music_instrument");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicPreferences", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.HasKey("Uid")
                        .HasName("pk_music_preferences");

                    b.ToTable("music_preferences");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicStyle", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MusicPreferencesUid")
                        .HasColumnName("music_preferences_uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MusicTalentUid")
                        .HasColumnName("music_talent_uid")
                        .HasColumnType("uuid");

                    b.Property<int>("Name")
                        .HasColumnName("name")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TrackUid")
                        .HasColumnName("track_uid")
                        .HasColumnType("uuid");

                    b.HasKey("Uid")
                        .HasName("pk_music_styles");

                    b.HasIndex("MusicPreferencesUid")
                        .HasName("ix_music_styles_music_preferences_uid");

                    b.HasIndex("MusicTalentUid")
                        .HasName("ix_music_styles_music_talent_uid");

                    b.HasIndex("TrackUid")
                        .HasName("ix_music_styles_track_uid");

                    b.ToTable("music_styles");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Track", b =>
                {
                    b.Property<Guid?>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OwnerUid")
                        .HasColumnName("owner_uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RatingUid")
                        .HasColumnName("rating_uid")
                        .HasColumnType("uuid");

                    b.Property<string>("TrackName")
                        .HasColumnName("track_name")
                        .HasColumnType("text");

                    b.HasKey("Uid")
                        .HasName("pk_tracks");

                    b.HasIndex("OwnerUid")
                        .HasName("ix_tracks_owner_uid");

                    b.HasIndex("RatingUid")
                        .HasName("ix_tracks_rating_uid");

                    b.ToTable("tracks");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Abstract.TalentProvider", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.AccountBase");

                    b.HasDiscriminator().HasValue("TalentProvider");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.TalentSeeker", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.AccountBase");

                    b.Property<Guid?>("MusicPreferencesUid")
                        .HasColumnName("music_preferences_uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnName("TalentSeeker_name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnName("TalentSeeker_phone")
                        .HasColumnType("text");

                    b.HasIndex("MusicPreferencesUid")
                        .HasName("ix_talent_seekers_music_preferences_uid");

                    b.HasDiscriminator().HasValue("TalentSeeker");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.ViewedTalents", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.ActionRecordBase");

                    b.Property<Guid?>("TalentSeekerUid")
                        .HasColumnName("talent_seeker_uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TalentUid")
                        .HasColumnName("talent_uid")
                        .HasColumnType("uuid");

                    b.HasIndex("TalentSeekerUid")
                        .HasName("ix_viewed_talents_talent_seeker_uid");

                    b.HasIndex("TalentUid")
                        .HasName("ix_viewed_talents_talent_uid");

                    b.HasDiscriminator().HasValue("ViewedTalents");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.InstagramLink", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.LinkContainerBase");

                    b.HasDiscriminator().HasValue("InstagramLink");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.InternalLink", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.LinkContainerBase");

                    b.HasDiscriminator().HasValue("InternalLink");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.YoutubeVideoLink", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.LinkContainerBase");

                    b.HasDiscriminator().HasValue("YoutubeVideoLink");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicTalentRating", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.RatingBase");

                    b.Property<int>("LikesCount")
                        .HasColumnName("likes_count")
                        .HasColumnType("integer");

                    b.Property<int>("OpenedContactCount")
                        .HasColumnName("opened_contact_count")
                        .HasColumnType("integer");

                    b.Property<int>("ViewsCount")
                        .HasColumnName("views_count")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("MusicTalentRating");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.TrackRating", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.RatingBase");

                    b.Property<int>("ListenedCount")
                        .HasColumnName("listened_count")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("TrackRating");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Photo", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.ResourceBase");

                    b.Property<Guid?>("MusicTalentUid")
                        .HasColumnName("music_talent_uid")
                        .HasColumnType("uuid");

                    b.HasIndex("MusicTalentUid")
                        .HasName("ix_photos_music_talent_uid");

                    b.HasDiscriminator().HasValue("Photo");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicTalent", b =>
                {
                    b.HasBaseType("FridayNight.DAL.Model.Abstract.TalentProvider");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<decimal>("DesirablePayment")
                        .HasColumnName("desirable_payment")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("InstagramLinkUid")
                        .HasColumnName("instagram_link_uid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("text");

                    b.Property<Guid?>("PhotoCoverUid")
                        .HasColumnName("photo_cover_uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RatingUid")
                        .HasColumnName("rating_uid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("YoutubeVideoUid")
                        .HasColumnName("youtube_video_uid")
                        .HasColumnType("uuid");

                    b.HasIndex("InstagramLinkUid")
                        .HasName("ix_accounts_instagram_link_uid");

                    b.HasIndex("PhotoCoverUid")
                        .HasName("ix_accounts_photo_cover_uid");

                    b.HasIndex("RatingUid")
                        .HasName("ix_accounts_rating_uid");

                    b.HasIndex("YoutubeVideoUid")
                        .HasName("ix_accounts_youtube_video_uid");

                    b.HasDiscriminator().HasValue("MusicTalent");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.LivePerformance", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.InternalLink", "InAppLink")
                        .WithMany()
                        .HasForeignKey("InAppLinkUid")
                        .HasConstraintName("fk_live_performances_link_container_base_in_app_link_uid");

                    b.HasOne("FridayNight.DAL.Model.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationUid")
                        .HasConstraintName("fk_live_performances_locations_location_uid");

                    b.HasOne("FridayNight.DAL.Model.MusicTalent", "MusicTalent")
                        .WithMany("Performances")
                        .HasForeignKey("MusicTalentUid")
                        .HasConstraintName("fk_live_performances_account_base_music_talent_uid");

                    b.HasOne("FridayNight.DAL.Model.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoUid")
                        .HasConstraintName("fk_live_performances_resource_base_photo_uid");

                    b.HasOne("FridayNight.DAL.Model.TalentSeeker", "TalentSeeker")
                        .WithMany("PerformanceHistory")
                        .HasForeignKey("TalentSeekerUid")
                        .HasConstraintName("fk_live_performances_account_base_talent_seeker_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Location", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.TalentSeeker", null)
                        .WithMany("Locations")
                        .HasForeignKey("TalentSeekerUid")
                        .HasConstraintName("fk_locations_account_base_talent_seeker_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicInstrument", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.MusicTalent", null)
                        .WithMany("Instruments")
                        .HasForeignKey("MusicTalentUid")
                        .HasConstraintName("fk_music_instrument_account_base_music_talent_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicStyle", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.MusicPreferences", null)
                        .WithMany("MusicStyles")
                        .HasForeignKey("MusicPreferencesUid")
                        .HasConstraintName("fk_music_styles_music_preferences_music_preferences_uid");

                    b.HasOne("FridayNight.DAL.Model.MusicTalent", null)
                        .WithMany("MusicStyle")
                        .HasForeignKey("MusicTalentUid")
                        .HasConstraintName("fk_music_styles_account_base_music_talent_uid");

                    b.HasOne("FridayNight.DAL.Model.Track", null)
                        .WithMany("MusicStyle")
                        .HasForeignKey("TrackUid")
                        .HasConstraintName("fk_music_styles_tracks_track_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Track", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.MusicTalent", "Owner")
                        .WithMany("Tracks")
                        .HasForeignKey("OwnerUid")
                        .HasConstraintName("fk_tracks_account_base_owner_uid");

                    b.HasOne("FridayNight.DAL.Model.TrackRating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingUid")
                        .HasConstraintName("fk_tracks_rating_base_rating_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.TalentSeeker", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.MusicPreferences", "MusicPreferences")
                        .WithMany()
                        .HasForeignKey("MusicPreferencesUid")
                        .HasConstraintName("fk_talent_seekers_music_preferences_music_preferences_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.ViewedTalents", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.TalentSeeker", null)
                        .WithMany("ViewedBands")
                        .HasForeignKey("TalentSeekerUid")
                        .HasConstraintName("fk_viewed_talents_account_base_talent_seeker_uid");

                    b.HasOne("FridayNight.DAL.Model.Abstract.TalentProvider", "Talent")
                        .WithMany()
                        .HasForeignKey("TalentUid")
                        .HasConstraintName("fk_viewed_talents_account_base_talent_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.Photo", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.MusicTalent", null)
                        .WithMany("Photos")
                        .HasForeignKey("MusicTalentUid")
                        .HasConstraintName("fk_photos_account_base_music_talent_uid");
                });

            modelBuilder.Entity("FridayNight.DAL.Model.MusicTalent", b =>
                {
                    b.HasOne("FridayNight.DAL.Model.InstagramLink", "InstagramLink")
                        .WithMany()
                        .HasForeignKey("InstagramLinkUid")
                        .HasConstraintName("fk_accounts_link_container_base_instagram_link_uid");

                    b.HasOne("FridayNight.DAL.Model.Photo", "PhotoCover")
                        .WithMany()
                        .HasForeignKey("PhotoCoverUid")
                        .HasConstraintName("fk_accounts_resource_base_photo_cover_uid");

                    b.HasOne("FridayNight.DAL.Model.MusicTalentRating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingUid")
                        .HasConstraintName("fk_accounts_rating_base_rating_uid");

                    b.HasOne("FridayNight.DAL.Model.YoutubeVideoLink", "YoutubeVideo")
                        .WithMany()
                        .HasForeignKey("YoutubeVideoUid")
                        .HasConstraintName("fk_accounts_link_container_base_youtube_video_uid");
                });
#pragma warning restore 612, 618
        }
    }
}
